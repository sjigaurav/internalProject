/*
 *
 * ADOBE CONFIDENTIAL
 * __________________
 *
 *  Copyright 2012 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */
/***
 * Workflow process to add a user to given user group create a user group if not 
 ***/

var TYPE_JCR_PATH = "JCR_PATH";
var PROPERTY_GROUP_NAME = "socialGroupName";
var PROPERTY_LIVECOPY_PATH = "liveCopyPath";
var PROPERTY_BLUEPRINT_PATH = "bluePrintPath";
var PROPERTY_USERGROUP_PATH = "userGroupPath";
var PROPERTY_MASTER_PAGES = "msmMasterPages";
var PROPERTY_CHAPTER_PAGES = "msmChapterPages";
var PROPERTY_TYPE = "type";
var GROUP_ADMIN = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_ADMINGROUP;
var GROUP_MEMBER = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_MEMBERGROUP;
var GROUP_ADMIN_SUFFIX = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_ADMINGROUP_SUFFIX;
var GROUP_MEMBER_SUFFIX = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_MEMBERGROUP_SUFFIX;
var PROPERTY_FORM_PAYLOAD = "formPayload";


var workflowData = workItem.getWorkflowData();
if(workflowData.getPayloadType() == TYPE_JCR_PATH){
    var path = workflowData.getPayload().toString();
    var session = workflowSession.getSession();
    var resolver = sling.getService(Packages.org.apache.sling.jcr.resource.JcrResourceResolverFactory).getResourceResolver(session);
    //var repository = sling.getService(Packages.org.apache.sling.jcr.api.SlingRepository);
    var groupService = sling.getService(Packages.com.adobe.cq.social.group.api.GroupService);

    try {
        path = path + "/" + Packages.org.apache.jackrabbit.JcrConstants.JCR_CONTENT;
        var resource = resolver.getResource(path);
        //log.error("path:"+path);
        var page_props = Packages.org.apache.sling.api.resource.ResourceUtil.getValueMap(resource);
        var originalPayload = page_props.get(PROPERTY_FORM_PAYLOAD, "");
        //log.error("originalPayload:"+originalPayload);
        
        var node = resolver.getResource(originalPayload);
        var props = Packages.org.apache.sling.api.resource.ResourceUtil.getValueMap(node);

        var bluePrintPath = props.get(PROPERTY_BLUEPRINT_PATH, "");
        var langs = props.get(PROPERTY_MASTER_PAGES, "");
        var chaps = props.get(PROPERTY_CHAPTER_PAGES, "");
        var groupPath= props.get(PROPERTY_USERGROUP_PATH, "");
        var groupName= props.get(PROPERTY_GROUP_NAME, "");
        groupName = Packages.com.day.cq.commons.jcr.JcrUtil.createValidName(groupName);
        var type= props.get(PROPERTY_TYPE, "");
        var liveCopyPath = props.get(PROPERTY_LIVECOPY_PATH, "");
    
        if(groupName.equals("")){
            log.error("group name cannot be empty");
        }
        if(bluePrintPath.equals("")){
            log.error("blueprint path cannot be empty");
        }
        if(liveCopyPath.equals("")){
            log.error("destination of live copy cannot be empty");
        }
        if(groupService == null){
            log.error("cannot get com.adobe.cq.social.group.api.GroupService ");
        }

        if(groupService != null && !groupName.equals("")){
            groupService.copyAccessControlPolicy(resolver, bluePrintPath, langs, liveCopyPath+"/"+groupName, groupName, type);
        }

    }
    catch(e){
        log.error("cannot create user group: "+groupPath+"/"+groupName+" social community at "+liveCopyPath+". "+e);
    }
}
