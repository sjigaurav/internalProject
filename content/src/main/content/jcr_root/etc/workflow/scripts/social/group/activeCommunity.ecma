/*
 *
 * ADOBE CONFIDENTIAL
 * __________________
 *
 *  Copyright 2012 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */

var TYPE_JCR_PATH = "JCR_PATH";
var PROPERTY_USERGROUP_PATH = "userGroupPath";
var PROPERTY_GROUP_NAME = "socialGroupName";
var PROPERTY_LIVECOPY_PATH = "liveCopyPath";
var GROUP_ADMIN_SUFFIX = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_ADMINGROUP_SUFFIX;
var GROUP_MEMBER_SUFFIX = Packages.com.adobe.cq.social.group.api.GroupConstants.GROUP_MEMBERGROUP_SUFFIX;

var workflowData = workItem.getWorkflowData();
if(workflowData.getPayloadType() == TYPE_JCR_PATH){
    var session = workflowSession.getSession();
    var path = workflowData.getPayload().toString();
    var resolver = sling.getService(Packages.org.apache.sling.jcr.resource.JcrResourceResolverFactory).getResourceResolver(session);
    var repository = sling.getService(Packages.org.apache.sling.jcr.api.SlingRepository);
    var replicator = sling.getService(Packages.com.day.cq.replication.Replicator);
    var groupService = sling.getService(Packages.com.adobe.cq.social.group.api.GroupService);

    var resource = resolver.getResource(path);
    var props = Packages.org.apache.sling.api.resource.ResourceUtil.getValueMap(resource);
    var groupPath= props.get(PROPERTY_USERGROUP_PATH, "");
    var liveCopyName= props.get(PROPERTY_GROUP_NAME, "");
    liveCopyName = Packages.com.day.cq.commons.jcr.JcrUtil.createValidName(liveCopyName);
    var liveCopyPath = props.get(PROPERTY_LIVECOPY_PATH, "");
    var page = liveCopyPath+"/"+liveCopyName;
    //log.error(page);
    
    try {
        if(page.equals("/")){
            log.info("community page path cannot be empty");
        }
        if(groupService == null){
            log.error("cannot get com.adobe.cq.social.group.api.GroupService ");
        }
        if(groupService != null && !page.equals("/")){
            groupService.activateCommunity(repository, resolver, replicator, page);
        }
    } catch(e) {
        log.warn("Cannot activate page " + page + " " + e);
    }
}