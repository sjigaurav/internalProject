/*
 *
 * ADOBE CONFIDENTIAL
 * __________________
 *
 *  Copyright 2012 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */
 /***
 * Workflow process to remove user moderated social relationship
 ***/

var TYPE_JCR_PATH = "JCR_PATH";
var USER_ID = Packages.com.adobe.cq.social.commons.ToggleUtil.PN_WORKFLOW_METADATA_USER;
var RELATIONSHIP = Packages.com.adobe.cq.social.commons.ToggleUtil.PN_WORKFLOW_METADATA_APPROVAL;

var workflowData = workItem.getWorkflowData();
if(workflowData.getPayloadType() == TYPE_JCR_PATH){
    var path = workflowData.getPayload().toString();
    var resourceResolver = sling.getService(Packages.org.apache.sling.api.resource.ResourceResolverFactory).getAdministrativeResourceResolver(null);
    var socialGraph = resourceResolver.adaptTo(Packages.com.adobe.granite.socialgraph.SocialGraph);
    var relationShip = workflowData.getMetaDataMap().get(RELATIONSHIP).getString().split("-")[1];

    try {
        var userPath = workflowData.getMetaDataMap().get(USER_ID).getString();
        var c_userId = resourceResolver.resolve(userPath).adaptTo(Packages.org.apache.jackrabbit.api.security.user.Authorizable).getID();
        var target = Packages.org.apache.sling.api.resource.ResourceUtil.getParent(resourceResolver.resolve(path)).adaptTo(Packages.org.apache.jackrabbit.api.security.user.Authorizable);
        var t_userId = null;
        if( target != null) {
            // get form user
            t_userId = target.getID();
        }

        var currentUserNode = socialGraph.getNode(t_userId);
        var targetNode = socialGraph.getNode(c_userId);

        //remove pending relation
        var graphMembers = currentUserNode.getRelationships(Packages.com.adobe.granite.socialgraph.Direction.OUTGOING, "pending-" + relationShip).iterator();
        while(graphMembers.hasNext()){
            var relation = graphMembers.next();
            if(relation.getEndNode().getId().equals(targetNode.getId())) {
                relation[ 'delete' ]();
                break;
            }
        }
        socialGraph.save();

    }catch(e){
        log.error(e);
    }
}
